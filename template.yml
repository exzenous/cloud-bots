AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  Environment:
    Type: String
    Description: Deploy CloudBot for which Envionment NonProd/Prod
    Default: ''
  DataCenter:
    Description: The Data Center your CloudGuard account is being run on
    Type: String
    Default: 'USA'
    AllowedValues:
      - Australia
      - Canada
      - Europe
      - India
      - Singapore
      - USA
  EmailAddress:
    Description: OPTIONAL - Email address to send output logs to
    Type: String
    Default: ''
  OutputMode:
    Description: Output Mode - can be as text or as JSON
    Type: String
    Default: JSON
    AllowedValues:
      - text
      - JSON
  sendLogs:
    Description: Send logs to Dome9
    Type: String
    Default: True
    AllowedValues:
      - True
      - False
  DeploymentMode:
    Description: Deployment Mode - can be single or multi
    Type: String
    Default: single
    AllowedValues:
      - single
      - multi

Conditions:
  CreateSubscriber: !Not [!Equals [!Ref EmailAddress, ""]]
  IsDcAustralia: !Equals
    - !Ref DataCenter
    - Australia
  IsDcCanada: !Equals
    - !Ref DataCenter
    - Canada
  IsDcEurope: !Equals
    - !Ref DataCenter
    - Europe
  IsDcIndia: !Equals
    - !Ref DataCenter
    - India
  IsDcSingapore: !Equals
    - !Ref DataCenter
    - Singapore
  IsDcUsa: !Equals
    - !Ref DataCenter
    - USA

Resources:
  InputTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: !Join [ '-', [ 'd9-findings', !Ref Environment ] ]
      TopicName: !Join [ '-', [ 'd9-findings', !Ref Environment ] ]

  InputTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: D9DeliveryPolicy
        Version: '2012-10-17'
        Statement:
          - Sid: D9DeliveryPolicy
            Effect: Allow
            Principal:
              AWS:
                !If [ IsDcUsa, 'arn:aws:iam::634729597623:root',
                !If [ IsDcIndia, 'arn:aws:iam::578204784313:root',
                !If [ IsDcAustralia, 'arn:aws:iam::434316140879:root',
                !If [ IsDcSingapore, 'arn:aws:iam::597850136722:root',
                !If [ IsDcEurope, 'arn:aws:iam::723885542676:root',
                !If [ IsDcCanada, 'arn:aws:iam::431603698195:root', !Ref "AWS::NoValue"]]]]]]
            Action: sns:Publish
            Resource: !Ref InputTopic
      Topics:
        - !Ref InputTopic

  OutputTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: !Join [ '-', [ 'remediationOutput', !Ref Environment ] ]
      TopicName: !Join [ '-', [ 'remediationOutput', !Ref Environment ] ]

  OutputTopicSubscription:
    Type: AWS::SNS::Subscription
    Condition: CreateSubscriber
    Properties:
      Endpoint: !Ref EmailAddress
      Protocol: email
      TopicArn: !Ref OutputTopic

  RemediationFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: !Join [ '-', [ 'Dome9CloudBots', !Ref Environment ] ]
      Description: 'Auto-remediation actions from Dome9 events'
      CodeUri:
        Bucket: !Join [ '' , [ 'dome9cloudbotsemplates' , !Join [ '', !Split [ "-" , !Ref "AWS::Region" ] ]] ]
        Key: cloudbots.zip
      Runtime: python3.9
      Timeout: 120 # Most will be under 8 seconds, but delete IGW needs to wait for the instances to be off before detaching from the VPC. This takes a bunch of time.
      Tracing: Active
      Handler: index.lambda_handler
      Policies:
        - Version: '2012-10-17' # Custom Policy Document
          Statement:
            - Effect: Allow
              Action:
                - logs:PutMetricFilter # For cloudwatch_create_metric_filter
                - logs:CreateLogGroup # For cloudtrail_send_to_cloudwatch
                - sns:Publish # For exporting the logs from CS2
                - sns:CreateTopic # For cloudwatch_create_metric_filter
                - sns:Subscribe # For cloudwatch_create_metric_filter
                - sns:DeleteTopic # For sns_topic_delete
                - sns:SetTopicAttributes # For sns_enforce_sse
                - sns:ListSubscriptionsByTopic # For cloudwatch_create_metric_filter
                - sts:GetCallerIdentity # For checking what account this is running in
                - sts:AssumeRole # For multi_account
                - logs:ListLogDeliveries # For network_firewall_enable_logging
                - logs:CreateLogDelivery # For network_firewall_enable_logging
                - logs:GetLogDelivery # For network_firewall_enable_logging
              Resource: '*'
      Environment:
        Variables:
          SNS_TOPIC_ARN: !Ref OutputTopic
          ACCOUNT_MODE: !Ref DeploymentMode
          OUTPUT_TYPE: !Ref OutputMode
          SEND_LOGS_TO_DOME9: !Ref sendLogs
          CROSS_ACCOUNT_ROLE_NAME: !Join ["-", ["Dome9CloudBots", !Ref Environment] ]
      Events:
        d9Findings:
          Type: SNS
          Properties:
            Topic: !Ref InputTopic

Outputs:
  InputTopicARN:
    Description: 'ARN that Dome9 sends events to'
    Value: !Ref InputTopic
  OutputTopicARN:
    Description: 'ARN for the export logs topic'
    Value: !Ref OutputTopic


